{
  "openapi": "3.0.1",
  "info": {
    "title": "API Auth Demo",
    "description": "A simple demo with JWT Auth APIs and Basic Auth APIs",
    "contact": {
      "name": "GitHub Repository",
      "url": "https://github.com/dotnet-labs/ApiAuthDemo",
      "email": ""
    },
    "version": "v1"
  },
  "paths": {
    "/TodoEndPoint/CreateTodo": {
      "post": {
        "tags": [
          "TodoEndPoint"
        ],
        "operationId": "CreateTodo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTodoCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/TodoEndPoint/GetTodos": {
      "get": {
        "tags": [
          "TodoEndPoint"
        ],
        "operationId": "GetTodos",
        "parameters": [
          {
            "name": "Status",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/TodoEndPoint/GetAllTodos": {
      "get": {
        "tags": [
          "TodoEndPoint"
        ],
        "operationId": "GetAllTodos",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoDtoIEnumerableDataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/TodoEndPoint/complete/{id}": {
      "put": {
        "tags": [
          "TodoEndPoint"
        ],
        "operationId": "MarkAsComplete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanDataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Update/{id}": {
      "put": {
        "tags": [
          "TodoEndPoint"
        ],
        "operationId": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTodoCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanDataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Delete/{id}": {
      "delete": {
        "tags": [
          "TodoEndPoint"
        ],
        "operationId": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanDataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/debug/routes": {
      "get": {
        "tags": [
          "Web"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BooleanDataResponse": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "statusCode": {
            "$ref": "#/components/schemas/HttpStatusCode"
          },
          "responseMessage": {
            "type": "string",
            "nullable": true
          },
          "responseData": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateTodoCommand": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "$ref": "#/components/schemas/TodoPriority"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HttpStatusCode": {
        "enum": [
          100,
          101,
          102,
          103,
          200,
          201,
          202,
          203,
          204,
          205,
          206,
          207,
          208,
          226,
          300,
          301,
          302,
          303,
          304,
          305,
          306,
          307,
          308,
          400,
          401,
          402,
          403,
          404,
          405,
          406,
          407,
          408,
          409,
          410,
          411,
          412,
          413,
          414,
          415,
          416,
          417,
          421,
          422,
          423,
          424,
          426,
          428,
          429,
          431,
          451,
          500,
          501,
          502,
          503,
          504,
          505,
          506,
          507,
          508,
          510,
          511
        ],
        "type": "integer",
        "format": "int32"
      },
      "TodoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "string",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "TodoDtoIEnumerableDataResponse": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "statusCode": {
            "$ref": "#/components/schemas/HttpStatusCode"
          },
          "responseMessage": {
            "type": "string",
            "nullable": true
          },
          "responseData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TodoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TodoPriority": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "TodoStatus": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "UpdateTodoCommand": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/TodoStatus"
          },
          "priority": {
            "$ref": "#/components/schemas/TodoPriority"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Enter JWT Bearer token **_only_**",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "BasicAuth": {
        "type": "http",
        "scheme": "basic"
      },
      "OpenIdConnectAuth": {
        "type": "openIdConnect",
        "openIdConnectUrl": "https://login.microsoftonline.com/organizations/v2.0/.well-known/openid-configuration"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    },
    {
      "BasicAuth": [ ]
    },
    {
      "OpenIdConnectAuth": [ ]
    }
  ]
}